version: '3.3'
name: link-shortener
services:
  reverse-proxy:
    image: traefik:v2.10
    container_name: reverse-proxy
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  web:
    build: ./web/
    container_name: web
    labels:
      # - "traefik.http.routers.web.rule=(Host(`www.laurl.es`) || Host(`laurl.es`) && Path(`/`))"
      - "traefik.http.routers.web.rule=(Path(`/`))"
      - "traefik.http.services.web.loadbalancer.server.port=80"

  api:
    build: ./api/
    container_name: api
    labels:
      # - "traefik.http.routers.api.rule=(Host(`laurl.es`) && Path(`/{url_part:.*}`))"
      - "traefik.http.routers.api.rule=(Path(`/{url_part:.*}`))"
      - "traefik.http.services.api.loadbalancer.server.port=80"
    volumes:
      - "./api/app:/code/app"
    environment:
      DB_SERVER: ${DB_SERVER}
      HASHIDS_SALT: ${HASHIDS_SALT}
      SHORT_URL_HOST: ${SHORT_URL_HOST}

  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

volumes:
  postgres_data: